.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Voiceglue::Conf 3"
.TH Voiceglue::Conf 3 "2012-03-22" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Voiceglue::Conf \- Support for reading/writing voiceglue.conf file
.SH "VERSION"
.IX Header "VERSION"
Version 0.02
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use Voiceglue::Conf;
\&    (($ok, $msg, $conf_map) =
\&        Voiceglue::Conf::parse_voiceglue_conf())[0] || die;
\&    $conf_map\->{"urls"}{"techsupport"} = 100;
\&    (($ok, $msg) = Voiceglue::Conf::write_voiceglue_conf($conf_map))[0] || die;
.Ve
.SH "EXPORT"
.IX Header "EXPORT"
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .SS "($ok, $msg, $conf_map) = parse_voiceglue_conf ($conf_file_path);"
.el .SS "($ok, \f(CW$msg\fP, \f(CW$conf_map\fP) = parse_voiceglue_conf ($conf_file_path);"
.IX Subsection "($ok, $msg, $conf_map) = parse_voiceglue_conf ($conf_file_path);"
Given a voiceglue.conf file path (defaults to \*(L"/etc/voiceglue.conf\*(R"),
returns a \f(CW$conf_map\fR structure that contains:
 \->{\*(L"urls\*(R"}{<exten>}		\*(-- \s-1URL\s0 of \s-1VXML\s0 to load when <exten> is called
 \->{\*(L"params\*(R"}{<param>}[<index>]	\*(-- values of parameter <param>
 \->{\*(L"lines\*(R"}[<line#>]		\*(-- raw lines of text from the file
Returns \f(CW$ok\fR true on success, false on failure and sets \f(CW$msg\fR to an error msg.
Note that \f(CW$conf_map\fR may still be populated even if errors are found.
.ie n .SS "($ok, $msg) = write_voiceglue_conf ($conf_map, $conf_file_path);"
.el .SS "($ok, \f(CW$msg\fP) = write_voiceglue_conf ($conf_map, \f(CW$conf_file_path\fP);"
.IX Subsection "($ok, $msg) = write_voiceglue_conf ($conf_map, $conf_file_path);"
Given a voiceglue \f(CW$conf_map\fR as obtained from \fIparse_voiceglue_conf()\fR
and a voiceglue.conf file path (defaults to \*(L"/etc/voiceglue.conf\*(R"),
writes a new voiceglue.conf file with \f(CW$conf_map\fR's info.
Returns \f(CW$ok\fR true on success, false on failure and sets \f(CW$msg\fR to an error msg.
.ie n .SS "$encoded = encode_field_minimally ($string)"
.el .SS "\f(CW$encoded\fP = encode_field_minimally ($string)"
.IX Subsection "$encoded = encode_field_minimally ($string)"
Returns SATC-encoded version of \f(CW$string\fR,
trying to only use encoding chars when necessary.
.SH "AUTHOR"
.IX Header "AUTHOR"
Doug Campbell, \f(CW\*(C`<voiceglue at voiceglue.org>\*(C'\fR
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Voiceglue::Conf
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
VoiceGlue Home Page
.Sp
<http://voiceglue.org>
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009\-2010 Ampersand Inc., and Doug Campbell
.PP
This file is part of Voiceglue::Conf.
.PP
Voiceglue::Conf is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.
.PP
Voiceglue::Conf is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with Voiceglue::Conf; if not, see <http://www.gnu.org/licenses/>.
